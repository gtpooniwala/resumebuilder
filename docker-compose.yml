services:
  db:
    image: postgres:15-alpine  # Smaller Alpine image
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: resume_builder
      # Use MD5 authentication for compatibility
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d resume_builder"]
      interval: 5s  # Faster health checks
      timeout: 3s
      retries: 3
      start_period: 10s
    # Resource limits for faster startup
    deploy:
      resources:
        limits:
          memory: 512M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      cache_from:
        - resumebuilder-backend:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/resume_builder
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app:ro  # Read-only for security
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      cache_from:
        - resumebuilder-frontend:latest
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NODE_ENV: development
      # Disable Next.js telemetry for faster startup
      NEXT_TELEMETRY_DISABLED: 1
    volumes:
      # More specific volume mounts for better performance
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/package-lock.json:/app/package-lock.json:ro
      - ./frontend/next.config.js:/app/next.config.js:ro
      - ./frontend/tailwind.config.js:/app/tailwind.config.js:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G

volumes:
  postgres_data:
  frontend_node_modules:  # Named volume for node_modules
  frontend_next:  # Named volume for .next
